
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Accès public pour les collections non-sensibles
    match /products/{productId} {
      allow read: if true;
    }
    match /services/{serviceId} {
      allow read: if true;
    }
    match /blog/{blogId} {
      allow read: if true;
    }
    
    // Les utilisateurs peuvent voir tous les profils, mais ne peuvent modifier que le leur
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create, update: if request.auth.uid == userId;
    }

    // Un utilisateur ne peut accéder qu'à son propre portefeuille
    match /wallets/{userId} {
      allow read, create, update: if request.auth.uid == userId;
      
      // Transactions (sous-collection)
      match /transactions/{transactionId} {
         allow read, create: if request.auth.uid == userId;
      }
    }
    
    // Les créateurs peuvent gérer leurs propres sessions live
    match /lives/{liveId} {
      allow read: if request.auth != null;
      allow create, update: if request.auth.uid == resource.data.hostId;
    }

    // Les messages ne sont lisibles que par l'expéditeur et le destinataire
    match /messages/{messageId} {
        allow read, create: if request.auth != null && (request.auth.uid == resource.data.senderId || request.auth.uid == resource.data.receiverId);
    }

    // Les appels ne peuvent être créés et lus que par les participants
    match /calls/{callId} {
        allow read, create, update: if request.auth != null && (request.auth.uid == resource.data.callerId || request.auth.uid == resource.data.receiverId);
        
        match /offerCandidates/{candidateId} {
           allow create: if request.auth != null;
        }
         match /answerCandidates/{candidateId} {
           allow create: if request.auth != null;
        }
    }
    
    // Fallback : refuse tout par défaut
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
