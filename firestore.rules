rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // users : lecture propre ou admin
    match /users/{userId} {
      allow read: if request.auth != null && (
        request.auth.uid == userId ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin"
      );
      allow create: if request.auth != null;
      allow update: if request.auth != null && request.auth.uid == userId;
      allow delete: if false;
    }

    // public read for services / products / blog
    match /services/{serviceId} {
      allow read: if true;
      allow write: if request.auth != null && (
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ["creator","admin"]
      );
    }

    match /products/{productId} {
      allow read: if true;
      allow write: if request.auth != null && (
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ["creator","partner","admin"]
      );
    }

    match /blogArticles/{articleId} {
      allow read: if true;
      allow write: if request.auth != null && (
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ["creator","admin"]
      );
    }

    match /liveSessions/{sessionId} {
      allow read: if true;
      allow write: if request.auth != null && (
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ["creator","admin"]
      );
    }

    match /messages/{messageId} {
      allow read, create: if request.auth != null && (
        request.auth.uid == resource.data.fromId || request.auth.uid == resource.data.toId
      );
      allow update, delete: if false;
    }
    
    match /wallet/{walletId}/transactions/{transactionId} {
      allow read, create: if request.auth != null && request.auth.uid == walletId;
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin";
    }

    match /partners/{partnerId} {
      allow read: if true;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin";
    }

    match /aiTasks/{taskId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null && (request.auth.uid == resource.data.userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin");
      allow update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin";
    }

    // deny all by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}